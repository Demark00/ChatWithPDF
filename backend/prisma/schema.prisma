// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id
  email       String        @unique
  createdAt   DateTime      @default(now())
  documents   Document[]
  ChatMessage ChatMessage[]
}

model Document {
  id          String          @id @default(uuid())
  user        User            @relation(fields: [userId], references: [id])
  userId      String
  fileName    String
  storagePath String
  uploadedAt  DateTime        @default(now())
  chunks      DocumentChunk[]
  ChatMessage ChatMessage[]
}

model DocumentChunk {
  id         String   @id @default(uuid())
  document   Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  documentId String
  chunkIndex Int
  content    String
  embedding  Json?
  createdAt  DateTime @default(now())

  @@unique([documentId, chunkIndex])
}

enum Role{
  user
  assistant
}

model ChatMessage {
  id         String    @id @default(uuid())
  document   Document  @relation(fields: [documentId], references: [id])
  documentId String
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  role       Role
  content    String
  timestamp  DateTime  @default(now())

  @@index([documentId])
  @@index([userId])
  @@index([timestamp])
}
